import com.zxy.plugin.*

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//hilt
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion BuildVersion.compileSdkVersion

    defaultConfig {
        minSdkVersion BuildVersion.minSdkVersion
        targetSdkVersion BuildVersion.targetSdkVersion
        versionCode BuildVersion.versionCode
        versionName BuildVersion.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('C:/dxxt/DEV_APP_SZZT.jks')
            storePassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            signingConfig signingConfigs.releaseConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
        useIR = true

        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
        ]
    }

    viewBinding {
        enabled = true
    }

    kapt {
        correctErrorTypes true
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.0.1'
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Androidx.multidex
    implementation Androidx.appcompat
    implementation Androidx.constraintLayout
    implementation Androidx.fragment
    implementation Androidx.fragmentKtx
    implementation Androidx.viewPager2
    // startup
    implementation Androidx.startupRuntime
    //compose
    implementation Compose.compose
    implementation Compose.composeUI
    implementation Compose.composeMaterial
    implementation Compose.composeActivity

    testImplementation Test.junit
    androidTestImplementation Test.testJunit
    androidTestImplementation Test.testCore
    androidTestImplementation Test.composeTest
    debugImplementation Test.debugCompose

    //material(set button style)
    implementation Material.material
    //kotlin coroutines
    implementation Coroutines.coroutinesCore
    implementation Coroutines.coroutinesAndroid

    //retrofit
    implementation Retrofit.retrofit
    implementation Retrofit.retrofitGson
    implementation Retrofit.retrofitRxjava
    implementation Retrofit.okHttpIntercept
    implementation Retrofit.retrofitCoroutine

    //hilt
    implementation Hilt.hiltAndroid
    kapt Hilt.hiltAndroidCompiler
    implementation Hilt.hiltViewModel
    kapt Hilt.hiltCompiler

    // Lifecycles only (without ViewModel or LiveData)
    implementation LifeCycle.lifecycleRuntime
    //ViewModel
    implementation LifeCycle.lifecycleViewModel
    //LiveData
    implementation LifeCycle.lifecycleLivaData
    //Annotation processor
    kapt LifeCycle.lifecycleCompiler
    //navigation
    implementation Navigation.navigationFragment
    implementation Navigation.navigationUi
    //room
    implementation Room.roomRuntime
    kapt Room.roomCompiler
    implementation Room.roomKtx
    implementation Room.roomRxjava
    implementation Room.roomGuava
    testImplementation Room.roomTesting
    //paging
    implementation Paging.pagingRuntime
    testImplementation Paging.pagingCommon
    implementation Paging.pagingRxjava
    //glide
    implementation Glide.glide
    kapt Glide.glideCompiler
}
